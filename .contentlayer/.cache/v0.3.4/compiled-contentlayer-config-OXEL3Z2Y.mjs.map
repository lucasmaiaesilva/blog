{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\nimport remarkGfm from 'remark-gfm';\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  slug: {\n    type: 'string',\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\n  },\n}\n\n// data that will be import in the page section\nexport const Doc = defineDocumentType(() => ({\n  name: 'Doc',\n  filePathPattern: 'content/**/*.mdx', // path to mdx files\n  contentType: 'mdx',\n  fields: {\n    // schema for the frontmatter data in the mdx file\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n    },\n    published: {\n      type: 'boolean',\n      default: false\n    },\n    computedFields,\n  }\n}))\n\nconst Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `docs/**/*.md`,\n  fields: {\n    title: { type: 'string', required: false },\n  },\n}))\n\nconst rehypePrettyCodeProperties = {};\n\nexport default makeSource({\n  contentDirPath: 'src/content',\n  documentTypes: [Doc],\n  // mdx: {\n  //   remarkPlugins: [remarkGfm],\n  //   rehypePlugins: [\n  //     rehypeSlug,\n  //     [\n  //       rehypePrettyCode,\n  //       {\n  //         theme: 'github-dark',\n  //         onVisitLine(node) {\n  //           // Prevent lines from collapsing in `display: grid` mode, and allow empty\n  //           // lines to be copy/pasted\n  //           if (node.children.length === 0) {\n  //             node.children = [{ type: 'text', value: ' ' }]\n  //           }\n  //         },\n  //         onVisitHighlightedLine(node) {\n  //           node.properties.className.push('line--highlighted')\n  //         },\n  //         onVisitHighlightedWord(node) {\n  //           node.properties.className = ['word--highlighted']\n  //         }\n  //       }\n  //     ],\n  //     [\n  //       // allow skip to the headings with the slug\n  //       rehypeAutolinkHeadings,\n  //       {\n  //         properties: {\n  //           className: ['subheading-anchor'],\n  //           ariaLabel: 'Link to section'\n  //         }\n  //       }\n  //     ]\n  //   ]\n  // }\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAGtB,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AACF;AAGO,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA;AAAA,IAEN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,EACF;AACF,EAAE;AAEF,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAC3C;AACF,EAAE;AAIF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCrB,CAAC;",
  "names": []
}
